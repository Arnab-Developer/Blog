@page "/draft"
@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Infrastructure
@using LinkDotNet.Blog.Infrastructure.Persistence
@using Microsoft.AspNetCore.Http
@attribute [Authorize]
@inject IRepository<BlogPost> BlogPostRepository
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Drafts</PageTitle>

<div class="container">
	<h3 class="fw-bold">Draft Blog Posts</h3>

	<div class="content px-4">
		@for (var i = 0; i < blogPosts.Count; i++)
		{
			<ShortBlogPost BlogPost="blogPosts[i]" UseAlternativeStyle="@(i % 2 != 0)"></ShortBlogPost>
		}
	</div>
</div>

@code {
    private IReadOnlyList<BlogPost> blogPosts = PagedList<BlogPost>.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authorName = HttpContextAccessor.HttpContext?.User.Identity?.Name;
        blogPosts = await BlogPostRepository.GetAllAsync(p => !p.IsPublished && p.AuthorName == authorName, b => b.UpdatedDate);
    }

}
